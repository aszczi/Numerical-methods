import numpy as np

A_1 = np.array([
	[5.8267103432, 1.0419816676, 0.4517861296, -0.2246976350, 0.7150286064],
	[1.0419816676, 5.8150823499, -0.8642832971, 0.6610711416, -0.3874139415],
	[0.4517861296, -0.8642832971, 1.5136472691, -0.8512078774, 0.6771688230],
	[-0.2246976350, 0.6610711416, -0.8512078774, 5.3014166511, 0.5228116055],
	[0.7150286064, -0.3874139415, 0.6771688230, 0.5228116055, 3.5431433879],
])

A_2 = np.array([
	[5.4763986379, 1.6846933459, 0.3136661779, -1.0597154562, 0.0083249547],
	[1.6846933459, 4.6359087874, -0.6108766748, 2.1930659258, 0.9091647433],
	[0.3136661779, -0.6108766748, 1.4591897081, -1.1804364456, 0.3985316185],
	[-1.0597154562, 2.1930659258, -1.1804364456, 3.3110327980, -1.1617171573],
	[0.0083249547, 0.9091647433, 0.3985316185, -1.1617171573, 2.1174700695],
])

b = np.array([-2.8634904630, -4.8216733374, -4.2958468309, -0.0877703331, -2.0223464006])
B_ = b + np.array([10**-6 , 0, 0, 0, 0])

y_1 = np.linalg.solve(A_1, b)
Y_1_ = np.linalg.solve(A_1, B_)

y_2 = np.linalg.solve(A_2, b)
Y_2_ = np.linalg.solve(A_2, B_)

K_A_1 = np.linalg.cond(A_1)
K_A_2 = np.linalg.cond(A_2)

delta_1 = np.linalg.norm(y_1 - Y_1_)
delta_2 = np.linalg.norm(y_2 - Y_2_)

print("y_1", y_1)
print("zaburzony y_1", Y_1_)

print("y_2", y_2)
print("zaburzony y_2", Y_2_)

print("delta_1", delta_1)
print("delta_2", delta_2)

print("K_A_1", K_A_1)
print("K_A_2", K_A_2)